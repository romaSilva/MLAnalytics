[{"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\index.js":"1","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\App.js":"2","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\store\\Store.js":"3","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\store\\Reducer.js":"4","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\store\\GlobalContext.js":"5","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\Routes.jsx":"6","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\pages\\Home.jsx":"7","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\components\\Header.jsx":"8","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\components\\ItemsTable.jsx":"9","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\components\\DateSelect.jsx":"10","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\services\\MLAnalyticsAPI.js":"11","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\util\\constants.js":"12"},{"size":197,"mtime":1607211929794,"results":"13","hashOfConfig":"14"},{"size":144,"mtime":1607214170698,"results":"15","hashOfConfig":"14"},{"size":1136,"mtime":1607902018433,"results":"16","hashOfConfig":"14"},{"size":261,"mtime":1607899902113,"results":"17","hashOfConfig":"14"},{"size":115,"mtime":1607212021284,"results":"18","hashOfConfig":"14"},{"size":355,"mtime":1607212667777,"results":"19","hashOfConfig":"14"},{"size":284,"mtime":1607267345774,"results":"20","hashOfConfig":"14"},{"size":1912,"mtime":1607883560544,"results":"21","hashOfConfig":"14"},{"size":8837,"mtime":1607901280179,"results":"22","hashOfConfig":"14"},{"size":1029,"mtime":1607899535352,"results":"23","hashOfConfig":"14"},{"size":125,"mtime":1607894083166,"results":"24","hashOfConfig":"14"},{"size":81,"mtime":1607899803472,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1sojnok",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\index.js",[],["54","55"],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\App.js",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\store\\Store.js",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\store\\Reducer.js",["56"],"import constants from \"../util/constants\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case constants.SET_ITEMS:\r\n      return {\r\n        ...state,\r\n        items: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\store\\GlobalContext.js",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\Routes.jsx",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\pages\\Home.jsx",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\components\\Header.jsx",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\components\\ItemsTable.jsx",["57"],"import React, { useContext, useEffect } from \"react\";\r\nimport GlobalContext from \"../store/GlobalContext\";\r\nimport PropTypes from \"prop-types\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport DateSelect from \"../components/DateSelect\";\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Name\",\r\n  },\r\n  { id: \"position\", numeric: true, disablePadding: false, label: \"Position\" },\r\n  { id: \"domain_id\", numeric: true, disablePadding: false, label: \"Domain ID\" },\r\n  {\r\n    id: \"category_name\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Category Name\",\r\n  },\r\n  {\r\n    id: \"price\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Price Average (R$)\",\r\n  },\r\n  {\r\n    id: \"available\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Available\",\r\n  },\r\n  {\r\n    id: \"sold\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Sold\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(0),\r\n    paddingRight: theme.spacing(1),\r\n    marginBottom: \"20px\",\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = () => {\r\n  const classes = useToolbarStyles();\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <Typography\r\n        className={classes.title}\r\n        variant=\"h6\"\r\n        id=\"tableTitle\"\r\n        component=\"div\"\r\n      >\r\n        Items\r\n      </Typography>\r\n      <DateSelect />\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n    paddingLeft: \"40px\",\r\n    paddingRight: \"40px\",\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const { items, handleItemsDateChange } = useContext(GlobalContext);\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"position\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  useEffect(() => {\r\n    const date = new Date(Date.now());\r\n    handleItemsDateChange(date);\r\n  }, []);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = items.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, items.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size=\"medium\"\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={items.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(items, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow hover>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.position}</TableCell>\r\n                      <TableCell align=\"right\">{row.domain_id}</TableCell>\r\n                      <TableCell align=\"right\">{row.category_name}</TableCell>\r\n                      <TableCell align=\"right\">{row.price}</TableCell>\r\n                      <TableCell align=\"right\">{row.available}</TableCell>\r\n                      <TableCell align=\"right\">{row.sold}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50]}\r\n          component=\"div\"\r\n          count={items.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\components\\DateSelect.jsx",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\services\\MLAnalyticsAPI.js",[],"C:\\Users\\romario.dasilva\\Desktop\\MLAnalytics\\web\\src\\util\\constants.js",["58"],"const constants = {\r\n  SET_ITEMS: \"SET_ITEMS\",\r\n};\r\n\r\nexport default constants;\r\n",{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":3,"column":1,"nodeType":"65","endLine":13,"endColumn":3},{"ruleId":"66","severity":1,"message":"67","line":203,"column":6,"nodeType":"68","endLine":203,"endColumn":8,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":1,"column":7,"nodeType":"72","messageId":"73","endLine":1,"endColumn":16},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleItemsDateChange'. Either include it or remove the dependency array.","ArrayExpression",["76"],"no-unused-vars","'constants' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},"Update the dependencies array to be: [handleItemsDateChange]",{"range":"79","text":"80"},[5650,5652],"[handleItemsDateChange]"]